{
    "chart_type": "BarChart",
    "title": "Reader Performance",
    "subtitle": "Time and Accuracy Benchmarks",
    "description": "Performance benchmarks of different Readers that can be used off-the-shelf in Haystack. Some models are geared towards speed, while others are more performance-focused. Accuracy is measured as F1 score and speed as passages/sec (with passages of 384 tokens).  Each Reader is benchmarked using the SQuAD v2.0 development set, which contains 11866 question answer pairs. When tokenized using the BERT tokenizer and split using a sliding window approach, these become 12350 passages that are passed into the model. We set <i>max_seq_len=384</i> and <i>doc_stride=128</i>. These benchmarking tests are run using an AWS p3.2xlarge instance with a Nvidia V100 GPU with this <a href='https://github.com/deepset-ai/haystack/blob/master/test/benchmarks/reader.py'>script</a>. Please note that we are using the FARMReader class rather than the TransformersReader class. Also, the F1 measure that is reported here is in fact calculated on token level, rather than word level as is done in the official SQuAD script.",
    "bars": "horizontal",
    "columns": [
        "Model",
        "F1",
        "Speed (passages/sec)"
    ],
    "data": [
        {
            "F1": 82.58860575299658,
            "Speed": 128.25544874114064,
            "Model": "RoBERTa"
        },
        {
            "F1": 78.87858491007042,
            "Speed": 269.33155450679567,
            "Model": "MiniLM"
        },
        {
            "F1": 74.31182400443286,
            "Speed": 123.82266420208393,
            "Model": "BERT base"
        },
        {
            "F1": 83.26306774734308,
            "Speed": 43.188105620245494,
            "Model": "BERT large"
        },
        {
            "F1": 84.50422699207468,
            "Speed": 42.956527893643,
            "Model": "XLM-RoBERTa"
        },
        {
            "F1": 42.31925844723574,
            "Speed": 226.281948654048,
            "Model": "DistilBERT"
        }
    ]
}