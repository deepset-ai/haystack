name: Minor Version Release

on:
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pydoc-markdown==4.5.1

      - name: Define all versions
        id: versions
        shell: bash
        # We only need `major.minor` in Readme so we cut the full version string to the first two tokens
        run: |
          git fetch
          git checkout main
          echo "::set-output name=current_release_minor::$(cat VERSION.txt | cut -d "." -f 1,2)"

      - name: Create new version branch
        run: |
          git checkout -b v${{ steps.versions.outputs.current_release_minor }}.x
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git push -u origin v${{ steps.versions.outputs.current_release_minor }}.x

      - name: Bump version on main
        id: bump-version
        run: |
          git fetch
          git checkout main
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull
          cat VERSION.txt | awk -F. '/[0-9]+\./{$2++;print}' OFS=. | tee VERSION.txt
          cat VERSION.txt
          git checkout -b bump-version
          git add ./VERSION.txt
          git commit -m "Bump version"
          git push -u origin bump-version

      # Note that patch versions all sync to the one readme minor version
      # e.g. Haystack 1.9.1 and 1.9.2 both map to Readme 1.9
      - name: Release Readme version
        run: |
          git checkout main
          python ./.github/utils/release_docs.py --version v${{ steps.versions.outputs.current_release_minor }} --key ${{ secrets.README_API_KEY }}

      - name: Edit category versions in API pydoc configs
        run: |
          git checkout v${{ steps.versions.outputs.current_release_minor }}.x
          python ./.github/utils/change_api_category_id.py --version v${{ steps.versions.outputs.current_release_minor }} --key ${{ secrets.README_API_KEY }}
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update API docs headers and readme_api_sync.yml to sync to new version"
          git push

      - name: Create Pull Request
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr create -B main -H bump-version --title 'Bump unstable version' --body 'Created by Github action'