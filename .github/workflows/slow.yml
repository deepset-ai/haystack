# If you change this name also do it in ci_metrics.yml
name: Slow Integration Tests

# This workflow always runs to satisfy Branch Protection rules.
# If no relevant files are changed, tests are skipped and the "Slow Integration Tests completed" job succeeds.

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HF_API_TOKEN: ${{ secrets.HUGGINGFACE_API_KEY }}
  PYTHON_VERSION: "3.9"
  HATCH_VERSION: "1.14.1"

on:
  workflow_dispatch: # Activate this workflow manually
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      # release branches have the form v1.9.x
      - "v[0-9].*[0-9].x"
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  check-if-changed:
  # This job checks if the relevant files have been changed.
  # If not, tests will be skipped and the "Slow Integration Tests completed" job will be marked as successful.
  #
  # We check for changes in the check-if-changed job instead of using paths/paths-ignore at workflow level.
  # This ensures the "Slow Integration Tests completed" job always runs, which is required by Branch Protection rules.
    name: Check if changed
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      code_changes: ${{ steps.changes.outputs.code_changes }}
    steps:
      - uses: actions/checkout@v4
      - name: Check for changed code
        id: changes
        uses: dorny/paths-filter@v3
        with:
          # List of Python files that trigger slow integration tests when modified
          filters: |
            code_changes:
              - "haystack/components/audio/whisper_local.py"
              - "haystack/components/converters/tika.py"
              - "test/components/converters/test_tika_doc_converter.py"
              - "test/components/audio/test_whisper_local.py"

  slow-integration-tests-linux:
    name: Slow Tests / ubuntu-latest
    runs-on: ubuntu-latest
    needs: check-if-changed
    if: needs.check-if-changed.outputs.code_changes == 'true'

    services:
      tika:
        image: apache/tika:2.9.0.0
        ports:
          - 9998:9998

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Install Hatch
        id: hatch
        shell: bash
        run: |
          pip install hatch==${{ env.HATCH_VERSION }}

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install ffmpeg  # for local Whisper tests

      - name: Run
        run: hatch run test:integration-only-slow

      - name: Calculate alert data
        id: calculator
        shell: bash
        if: (success() || failure()) && github.ref_name == 'main'
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "alert_type=success" >> "$GITHUB_OUTPUT";
          else
            echo "alert_type=error" >> "$GITHUB_OUTPUT";
          fi

      - name: Send event to Datadog
        if: (success() || failure()) && github.ref_name == 'main'
        uses: masci/datadog@v1
        with:
          api-key: ${{ secrets.CORE_DATADOG_API_KEY }}
          api-url: https://api.datadoghq.eu
          events: |
            - title: "${{ github.workflow }} workflow"
              text: "Job ${{ github.job }} in branch ${{ github.ref_name }}"
              alert_type: "${{ steps.calculator.outputs.alert_type }}"
              source_type_name: "Github"
              host: ${{ github.repository_owner }}
              tags:
                - "project:${{ github.repository }}"
                - "job:${{ github.job }}"
                - "run_id:${{ github.run_id }}"
                - "workflow:${{ github.workflow }}"
                - "branch:${{ github.ref_name }}"
                - "url:https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  slow-integration-tests-macos:
    name: Slow Tests / macos-latest
    runs-on: macos-latest
    env:
      HAYSTACK_MPS_ENABLED: false
    needs: check-if-changed
    if: needs.check-if-changed.outputs.code_changes == 'true'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Install Hatch
        id: hatch
        shell: bash
        run: |
          pip install hatch==${{ env.HATCH_VERSION }}

      - name: Install dependencies
        run: |
          brew install ffmpeg  # for local Whisper tests

      - name: Run
        run: hatch run test:integration-only-slow

      - name: Calculate alert data
        id: calculator
        shell: bash
        if: (success() || failure()) && github.ref_name == 'main'
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "alert_type=success" >> "$GITHUB_OUTPUT";
          else
            echo "alert_type=error" >> "$GITHUB_OUTPUT";
          fi

      - name: Send event to Datadog
        if: (success() || failure()) && github.ref_name == 'main'
        uses: masci/datadog@v1
        with:
          api-key: ${{ secrets.CORE_DATADOG_API_KEY }}
          api-url: https://api.datadoghq.eu
          events: |
            - title: "${{ github.workflow }} workflow"
              text: "Job ${{ github.job }} in branch ${{ github.ref_name }}"
              alert_type: "${{ steps.calculator.outputs.alert_type }}"
              source_type_name: "Github"
              host: ${{ github.repository_owner }}
              tags:
                - "project:${{ github.repository }}"
                - "job:${{ github.job }}"
                - "run_id:${{ github.run_id }}"
                - "workflow:${{ github.workflow }}"
                - "branch:${{ github.ref_name }}"
                - "url:https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  slow-integration-tests-windows:
    name: Slow Tests / windows-latest
    runs-on: windows-latest
    needs: check-if-changed
    if: needs.check-if-changed.outputs.code_changes == 'true'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Install Hatch
        id: hatch
        shell: bash
        run: |
          pip install hatch==${{ env.HATCH_VERSION }}


      - name: Run
        run: hatch run test:integration-only-slow

      - name: Calculate alert data
        id: calculator
        shell: bash
        if: (success() || failure()) && github.ref_name == 'main'
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "alert_type=success" >> "$GITHUB_OUTPUT";
          else
            echo "alert_type=error" >> "$GITHUB_OUTPUT";
          fi

      - name: Send event to Datadog
        if: (success() || failure()) && github.ref_name == 'main'
        uses: masci/datadog@v1
        with:
          api-key: ${{ secrets.CORE_DATADOG_API_KEY }}
          api-url: https://api.datadoghq.eu
          events: |
            - title: "${{ github.workflow }} workflow"
              text: "Job ${{ github.job }} in branch ${{ github.ref_name }}"
              alert_type: "${{ steps.calculator.outputs.alert_type }}"
              source_type_name: "Github"
              host: ${{ github.repository_owner }}
              tags:
                - "project:${{ github.repository }}"
                - "job:${{ github.job }}"
                - "run_id:${{ github.run_id }}"
                - "workflow:${{ github.workflow }}"
                - "branch:${{ github.ref_name }}"
                - "url:https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  slow-integration-tests-completed:
    # This job always runs and succeeds if all tests succeed or are skipped. It is required by Branch Protection rules.
    name: Slow Integration Tests completed
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - slow-integration-tests-linux
      - slow-integration-tests-macos
      - slow-integration-tests-windows

    steps:
    - name: Mark tests as completed
      run: |
        if [ "${{ needs.slow-integration-tests-linux.result }}" = "failure" ] || \
           [ "${{ needs.slow-integration-tests-macos.result }}" = "failure" ] || \
           [ "${{ needs.slow-integration-tests-windows.result }}" = "failure" ]; then
          echo "Slow Integration Tests failed!"
          exit 1
        else
          echo "Slow Integration Tests completed!"
        fi
