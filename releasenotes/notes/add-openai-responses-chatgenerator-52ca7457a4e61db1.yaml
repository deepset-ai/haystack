---
features:
  - |
    Added the OpenAIResponsesChatGenerator, a new component that integrates OpenAI's Responses API into Haystack.
    This unlocks several advanced capabilities from the Responses API:
    - Allowing retrieval of concise summaries of the model's reasoning process.
    - Allowing the use of native OpenAI or MCP tool formats, along with Haystack Tool objects and Toolset instances.

    Example with reasoning and web search tool:
    ```python
    from haystack.components.generators.chat import OpenAIResponsesChatGenerator
    from haystack.dataclasses import ChatMessage

    chat_generator = OpenAIResponsesChatGenerator(
        model="o3-mini",
        generation_kwargs={
            {"summary": "auto", "effort": "low"}
        },
        tools=[{"type": "web_search"}]
    )

    response = chat_generator.run(
        messages=[
            ChatMessage.from_user("What's a positive news story from today?")
        ]
    )
    print(response["replies"][0].text)
    ```

    Example with structured output:
    ```python
    from pydantic import BaseModel
    from haystack.components.generators.chat import OpenAIResponsesChatGenerator
    from haystack.dataclasses import ChatMessage

    class WeatherInfo(BaseModel):
        location: str
        temperature: float
        conditions: str

    chat_generator = OpenAIResponsesChatGenerator(
        model="gpt-5-mini",
        generation_kwargs={"text_format": WeatherInfo}
    )

    response = chat_generator.run(
        messages=[ChatMessage.from_user("What's the weather in Paris?")]
    )
    ```
