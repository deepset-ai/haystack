FROM nvidia/cuda:11.1.1-runtime-ubuntu20.04

WORKDIR /home/user

ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

# Install software dependencies
RUN apt-get update && apt-get install -y software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get install -y \
        cmake \
        curl \
        git \
        libpoppler-cpp-dev \
        libtesseract-dev \
        pkg-config \
        poppler-utils \
        python3-pip \
        python3.7 \
        python3.7-dev \
        python3.7-distutils \
        swig \
        tesseract-ocr \
        wget && \
    rm -rf /var/lib/apt/lists/*

# Install PDF converter
RUN curl -s https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz | tar -xvzf - -C /usr/local/bin --strip-components=2 xpdf-tools-linux-4.04/bin64/pdftotext

# Set default Python version
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 && \
    update-alternatives --set python3 /usr/bin/python3.7

# Copy Haystack code
COPY haystack /home/user/haystack/
# Copy package files & models
COPY setup.py setup.cfg pyproject.toml VERSION.txt LICENSE README.md models* /home/user/
# Copy REST API code
COPY rest_api /home/user/rest_api/

# Install package
RUN pip install --upgrade pip
RUN pip install --no-cache-dir .[docstores-gpu,crawler,preprocessing,ocr,ray]
RUN pip install --no-cache-dir rest_api/
# Install PyTorch for CUDA 11
RUN pip3 install --no-cache-dir torch==1.10.1+cu111 -f https://download.pytorch.org/whl/torch_stable.html

# Cache Roberta and NLTK data
RUN python3 -c "from haystack.utils.docker import cache_models;cache_models()"

# create folder for /file-upload API endpoint with write permissions, this might be adjusted depending on FILE_UPLOAD_PATH
RUN mkdir -p /home/user/rest_api/file-upload
RUN chmod 777 /home/user/rest_api/file-upload

# optional : copy sqlite db if needed for testing
#COPY qa.db /home/user/

# optional: copy data directory containing docs for ingestion
#COPY data /home/user/data

EXPOSE 8000
ENV HAYSTACK_DOCKER_CONTAINER="HAYSTACK_GPU_CONTAINER"

# cmd for running the API (note: "--preload" is not working with cuda)
CMD ["gunicorn", "rest_api.application:app",  "-b", "0.0.0.0", "-k", "uvicorn.workers.UvicornWorker", "--workers", "1", "--timeout", "180"]
