---

components:
  answer_builder:
    init_parameters: {}
    type: "haystack.components.builders.answer_builder.AnswerBuilder"

  generator:
    init_parameters:
      api_key:
        env_vars: [ "OPENAI_API_KEY" ]
        strict: true
        type: "env_var"
      model: "gpt-3.5-turbo"
    type: "haystack.components.generators.openai.OpenAIGenerator"

  retriever:
    init_parameters:
      document_store:
        init_parameters:
          bm25_algorithm: "BM25L"
          bm25_parameters: {}
          bm25_tokenization_regex: "(?u)\\b\\w\\w+\\b"
          embedding_similarity_function: "dot_product"
        type: "haystack.document_stores.in_memory.document_store.InMemoryDocumentStore"
      filters: None,
      return_embedding: false,
      scale_score: false,
      top_k: 10
    type: "haystack.components.retrievers.in_memory.embedding_retriever.InMemoryEmbeddingRetriever"

  text_embedder:
    init_parameters:
      batch_size: 32
      device:
        type: "single"
        device: "cpu"
      model: "sentence-transformers/all-mpnet-base-v2"
      normalize_embeddings: false
      prefix: ""
      progress_bar: true
      suffix: ""
    type: "haystack.components.embedders.sentence_transformers_text_embedder.SentenceTransformersTextEmbedder"

  prompt_builder:
    init_parameters:
      template: |
        {% raw %}
          "Given these documents, answer the question.
          Documents:
          {% for doc in documents %}
            {{ doc.content }}
          {% endfor %}
          Question: {{question}}
          Answer:\n"
        {% endraw %}
    type: "haystack.components.builders.prompt_builder.PromptBuilder"

connections:
- receiver: retriever.query_embedding
  sender: text_embedder.embedding
- receiver: prompt_builder.documents
  sender: retriever.documents
- receiver: answer_builder.documents
  sender: retriever.documents
- receiver: generator.prompt
  sender: prompt_builder.prompt
- receiver: answer_builder.replies
  sender: generator.replies
- receiver: answer_builder.meta
  sender: generator.meta

metadata:
  {}
